/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.projectdb;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import static javax.swing.JOptionPane.QUESTION_MESSAGE;
import static javax.swing.JOptionPane.YES_NO_OPTION;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author MICHAL
 */
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    String connector = "org.postgresql.Driver";
    String url = "jdbc:postgresql://localhost:5432/zoo";
    String user = "testuser";
    String password = "password";

    public Home() {
        initComponents();
        centerFrame();
        jPanel_edit.setVisible(false);
        up.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel_edit = new javax.swing.JPanel();
        lbl_species = new javax.swing.JLabel();
        lbl_name = new javax.swing.JLabel();
        txt_name = new javax.swing.JTextField();
        lbll_age = new javax.swing.JLabel();
        txt_age = new javax.swing.JTextField();
        lbl_cage = new javax.swing.JLabel();
        btn_add = new javax.swing.JButton();
        btn_rmv = new javax.swing.JButton();
        btn_rst = new javax.swing.JButton();
        btn_update = new javax.swing.JButton();
        up = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        species_box = new javax.swing.JComboBox<>();
        cage_box = new javax.swing.JComboBox<>();
        btn_count = new javax.swing.JButton();
        btn_battle = new javax.swing.JButton();
        btn_empl = new javax.swing.JButton();
        btn_list = new javax.swing.JPanel();
        lbl_list = new javax.swing.JLabel();
        btn_discover = new javax.swing.JPanel();
        lbl_discover = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lblStatus = new javax.swing.JLabel();
        lbl_find = new javax.swing.JLabel();
        txt_find = new javax.swing.JTextField();
        btn_rst2 = new javax.swing.JButton();
        search_box = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel1MouseDragged(evt);
            }
        });
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(76, 41, 211));
        jPanel2.setPreferredSize(new java.awt.Dimension(286, 525));

        jPanel_edit.setBackground(new java.awt.Color(76, 41, 211));

        lbl_species.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        lbl_species.setForeground(new java.awt.Color(204, 204, 204));
        lbl_species.setText("Species");

        lbl_name.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        lbl_name.setForeground(new java.awt.Color(204, 204, 204));
        lbl_name.setText("Name");

        txt_name.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt_name.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txt_name.setPreferredSize(new java.awt.Dimension(4, 20));

        lbll_age.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        lbll_age.setForeground(new java.awt.Color(204, 204, 204));
        lbll_age.setText("Age");

        txt_age.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txt_age.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        txt_age.setPreferredSize(new java.awt.Dimension(4, 20));
        txt_age.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_ageKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_ageKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_ageKeyTyped(evt);
            }
        });

        lbl_cage.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        lbl_cage.setForeground(new java.awt.Color(204, 204, 204));
        lbl_cage.setText("Cage size");

        btn_add.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        btn_add.setText("Add");
        btn_add.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.cyan, java.awt.Color.cyan, java.awt.Color.cyan, java.awt.Color.cyan));
        btn_add.setMaximumSize(new java.awt.Dimension(83, 26));
        btn_add.setMinimumSize(new java.awt.Dimension(29, 26));
        btn_add.setPreferredSize(new java.awt.Dimension(83, 26));
        btn_add.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_addMousePressed(evt);
            }
        });
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });

        btn_rmv.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        btn_rmv.setText("Remove");
        btn_rmv.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.cyan, java.awt.Color.cyan, java.awt.Color.cyan, java.awt.Color.cyan));
        btn_rmv.setMaximumSize(new java.awt.Dimension(83, 26));
        btn_rmv.setMinimumSize(new java.awt.Dimension(53, 26));
        btn_rmv.setPreferredSize(new java.awt.Dimension(83, 26));
        btn_rmv.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_rmvMousePressed(evt);
            }
        });
        btn_rmv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_rmvActionPerformed(evt);
            }
        });

        btn_rst.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        btn_rst.setText("Clear");
        btn_rst.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.cyan, java.awt.Color.cyan, java.awt.Color.cyan, java.awt.Color.cyan));
        btn_rst.setMaximumSize(new java.awt.Dimension(83, 26));
        btn_rst.setMinimumSize(new java.awt.Dimension(36, 26));
        btn_rst.setPreferredSize(new java.awt.Dimension(83, 26));
        btn_rst.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_rstMousePressed(evt);
            }
        });
        btn_rst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_rstActionPerformed(evt);
            }
        });

        btn_update.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        btn_update.setText("Update");
        btn_update.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.cyan, java.awt.Color.cyan, java.awt.Color.cyan, java.awt.Color.cyan));
        btn_update.setMaximumSize(new java.awt.Dimension(83, 26));
        btn_update.setMinimumSize(new java.awt.Dimension(47, 26));
        btn_update.setPreferredSize(new java.awt.Dimension(83, 26));
        btn_update.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_updateMousePressed(evt);
            }
        });

        up.setText("^");
        up.setBorder(null);
        up.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                upMousePressed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        jButton2.setText("Check age");
        jButton2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.orange, java.awt.Color.orange, java.awt.Color.orange, java.awt.Color.orange));
        jButton2.setMaximumSize(new java.awt.Dimension(110, 26));
        jButton2.setMinimumSize(new java.awt.Dimension(63, 26));
        jButton2.setPreferredSize(new java.awt.Dimension(110, 26));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        species_box.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        species_box.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "all animals", "lion", "elephant", "giraffe", "penguin", "zebra", "lemur", "meercat" }));
        species_box.setSelectedIndex(1);

        cage_box.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        cage_box.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "S", "M", "L" }));
        cage_box.setSelectedIndex(1);
        cage_box.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        btn_count.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        btn_count.setText("Count animals");
        btn_count.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.orange, java.awt.Color.orange, java.awt.Color.orange, java.awt.Color.orange));
        btn_count.setMaximumSize(new java.awt.Dimension(83, 26));
        btn_count.setMinimumSize(new java.awt.Dimension(83, 26));
        btn_count.setPreferredSize(new java.awt.Dimension(83, 26));
        btn_count.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_countActionPerformed(evt);
            }
        });

        btn_battle.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        btn_battle.setText("Battle");
        btn_battle.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.orange, java.awt.Color.orange, java.awt.Color.orange, java.awt.Color.orange));
        btn_battle.setMaximumSize(new java.awt.Dimension(36, 26));
        btn_battle.setMinimumSize(new java.awt.Dimension(36, 26));
        btn_battle.setPreferredSize(new java.awt.Dimension(36, 26));
        btn_battle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_battleActionPerformed(evt);
            }
        });

        btn_empl.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        btn_empl.setText("Employees");
        btn_empl.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.orange, java.awt.Color.orange, java.awt.Color.orange, java.awt.Color.orange));
        btn_empl.setMaximumSize(new java.awt.Dimension(68, 26));
        btn_empl.setMinimumSize(new java.awt.Dimension(68, 26));
        btn_empl.setPreferredSize(new java.awt.Dimension(68, 26));
        btn_empl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_emplActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_editLayout = new javax.swing.GroupLayout(jPanel_edit);
        jPanel_edit.setLayout(jPanel_editLayout);
        jPanel_editLayout.setHorizontalGroup(
            jPanel_editLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_editLayout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addGroup(jPanel_editLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbl_species, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel_editLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lbl_name)))
                .addGap(97, 97, 97))
            .addGroup(jPanel_editLayout.createSequentialGroup()
                .addGroup(jPanel_editLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_editLayout.createSequentialGroup()
                        .addGroup(jPanel_editLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btn_rmv, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel_editLayout.createSequentialGroup()
                                .addComponent(up, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24)
                                .addComponent(btn_update, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(btn_battle, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel_editLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(jPanel_editLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel_editLayout.createSequentialGroup()
                                .addComponent(btn_rst, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txt_age, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel_editLayout.createSequentialGroup()
                                .addComponent(btn_add, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel_editLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btn_empl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btn_count, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(jPanel_editLayout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addGroup(jPanel_editLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel_editLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(cage_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lbl_cage)))
                    .addGroup(jPanel_editLayout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(species_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel_editLayout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(lbll_age)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel_editLayout.setVerticalGroup(
            jPanel_editLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_editLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(lbl_species)
                .addGap(12, 12, 12)
                .addComponent(species_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(lbl_name)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbll_age)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbl_cage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cage_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addGroup(jPanel_editLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_rst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_editLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_add, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_count, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_editLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_rmv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_empl, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_editLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(up, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_update, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_battle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(7, 7, 7))
        );

        btn_list.setBackground(new java.awt.Color(76, 41, 211));
        btn_list.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_listMousePressed(evt);
            }
        });
        btn_list.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbl_list.setBackground(new java.awt.Color(222, 222, 222));
        lbl_list.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        lbl_list.setForeground(new java.awt.Color(204, 204, 204));
        lbl_list.setText("Show all animals");
        btn_list.add(lbl_list, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, -1, -1));

        btn_discover.setBackground(new java.awt.Color(76, 41, 211));
        btn_discover.setPreferredSize(new java.awt.Dimension(0, 75));
        btn_discover.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_discoverMousePressed(evt);
            }
        });
        btn_discover.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbl_discover.setBackground(new java.awt.Color(222, 222, 222));
        lbl_discover.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        lbl_discover.setForeground(new java.awt.Color(204, 204, 204));
        lbl_discover.setText("Edit data");
        btn_discover.add(lbl_discover, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, 80, -1));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btn_list, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btn_discover, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel_edit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_list, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btn_discover, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel_edit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setBackground(new java.awt.Color(255, 255, 255));
        jTable1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable1.setForeground(new java.awt.Color(0, 0, 0));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "name", "age", "species_name", "cage_size"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(255, 255, 255));
        jTable1.setIntercellSpacing(new java.awt.Dimension(10, 10));
        jTable1.setRowHeight(30);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE)
        );

        lblStatus.setBackground(new java.awt.Color(204, 204, 204));
        lblStatus.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblStatus.setForeground(new java.awt.Color(204, 204, 204));
        lblStatus.setText("Status:");
        lblStatus.setToolTipText("");

        lbl_find.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        lbl_find.setForeground(new java.awt.Color(0, 0, 0));
        lbl_find.setText("Find an animal by its");

        txt_find.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_findKeyReleased(evt);
            }
        });

        btn_rst2.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        btn_rst2.setText("Clear");
        btn_rst2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btn_rst2MousePressed(evt);
            }
        });

        search_box.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        search_box.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "species_name", "name", "cage_size", "id_employee" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 610, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lbl_find)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(search_box, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_find, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_rst2)))
                .addGap(10, 10, 10))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(lblStatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_find)
                    .addComponent(search_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_find, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_rst2))
                .addGap(27, 27, 27))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 547, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_addMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_addMousePressed
        // TODO add your handling code here:
        if (txt_name.getText().isEmpty() || txt_age.getText().isEmpty()) {
            lblStatus.setForeground(Color.red);
            lblStatus.setText("Enter all details!");
        } else {
            saveData();
        }
    }//GEN-LAST:event_btn_addMousePressed

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_addActionPerformed

    private void btn_rmvMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_rmvMousePressed
        // TODO add your handling code here:
        remove();
        alterId();
    }//GEN-LAST:event_btn_rmvMousePressed

    private void btn_rmvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_rmvActionPerformed

    }//GEN-LAST:event_btn_rmvActionPerformed

    private void btn_rstMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_rstMousePressed
        // TODO add your handling code here:
        clearFields();
    }//GEN-LAST:event_btn_rstMousePressed

    private void btn_listMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_listMousePressed
        // TODO add your handling code here:
        setColor(btn_list);
        resetColor(btn_discover);
        loadData();
    }//GEN-LAST:event_btn_listMousePressed

    private void btn_discoverMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_discoverMousePressed
        // TODO add your handling code here:
        setColor(btn_discover);
        resetColor(btn_list);
        jPanel_edit.setVisible(true);
        up.setVisible(true);
    }//GEN-LAST:event_btn_discoverMousePressed

    private void jPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseDragged
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1MouseDragged

    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1MousePressed

    private void btn_rstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_rstActionPerformed
        // TODO add your handling code here:
        clearFields();
    }//GEN-LAST:event_btn_rstActionPerformed

    //dostosować do programu
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int i = jTable1.getSelectedRow();
        TableModel model = jTable1.getModel();
        txt_name.setText(model.getValueAt(i, 1).toString());
        txt_age.setText(model.getValueAt(i, 2).toString());
        species_box.setSelectedItem(model.getValueAt(i, 3).toString());
        cage_box.setSelectedItem(model.getValueAt(i, 4).toString());

    }//GEN-LAST:event_jTable1MouseClicked

    private void btn_updateMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_updateMousePressed
        // TODO add your handling code here:
        update();
    }//GEN-LAST:event_btn_updateMousePressed

    private void upMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_upMousePressed
        // TODO add your handling code here:
        jPanel_edit.setVisible(false);
        up.setVisible(false);
    }//GEN-LAST:event_upMousePressed

    private void txt_findKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_findKeyReleased
        // TODO add your handling code here:
        try {
            Class.forName(connector);
            Connection con = DriverManager.getConnection(url, user, password);
            String selection = (String) search_box.getSelectedItem();
            String find = txt_find.getText();
            if (search_box.getSelectedIndex() != 3) {
                String query = "SELECT  id, name, age, species_name, cage_size\n"
                        + "FROM   animals a  \n"
                        + "       LEFT OUTER JOIN species s on a.id_species = s.id_species\n"
                        + "       INNER JOIN cages c on c.cage_nr = a.cage_nr\n"
                        + "       WHERE lower(" + selection + ") like lower('" + find + "%')"
                        + "ORDER BY 1";
                PreparedStatement pst = con.prepareStatement(query);
                ResultSet rs = pst.executeQuery();
                jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            } else {
                if (!txt_find.getText().isEmpty()) {
                    String query2 = "SELECT  id, name, age, species_name, cage_size\n"
                            + "FROM   animals a\n"
                            + "LEFT OUTER JOIN species s on a.id_species = s.id_species\n"
                            + "INNER JOIN cages c on c.cage_nr = a.cage_nr\n"
                            + "INNER JOIN employees_cages on employees_cages.cage_nr = a.cage_nr\n"
                            + "WHERE employees_cages.id_employee = " + find;
                    PreparedStatement pst = con.prepareStatement(query2);
                    ResultSet rs = pst.executeQuery();
                    jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                }
            }

            if (txt_find.getText().isEmpty()) {
                loadData();
            }

//            while(rs.next()){
//            
//            }
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txt_findKeyReleased

    private void btn_rst2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_rst2MousePressed
        // TODO add your handling code here:
        txt_find.setText("");
    }//GEN-LAST:event_btn_rst2MousePressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        check_age();
    }//GEN-LAST:event_jButton2ActionPerformed

    /*CREATE OR REPLACE FUNCTION count_animals(a_species_name IN VARCHAR DEFAULT null)
RETURNS NUMERIC AS $$
DECLARE count_id NUMERIC;
BEGIN
	IF a_species_name is null THEN
		SELECT count(*) INTO count_id FROM animals;
	ELSE
		SELECT count(id) INTO count_id FROM animals INNER JOIN species using (id_species)
    WHERE species_name = a_species_name;
	END IF;
	RETURN count_id;
END;
$$ LANGUAGE plpgsql;*/

    private void btn_countActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_countActionPerformed
        // TODO add your handling code here:
        try {
            Class.forName(connector);
            Connection con = DriverManager.getConnection(url, user, password);
            String selection = (String) species_box.getSelectedItem();
            Statement st = con.createStatement();
            ResultSet rs;
            int result = 0;
            if (species_box.getSelectedIndex() == 0) {
                rs = st.executeQuery("select count_animals()");
                while (rs.next()) {
                    result = rs.getInt("count_animals");
                }
                JOptionPane.showMessageDialog(null, "There are(is) " + result + " animal(s) in the zoo");
            } else {
                rs = st.executeQuery("select count_animals('" + selection + "')");
                while (rs.next()) {
                    result = rs.getInt("count_animals");
                }
                JOptionPane.showMessageDialog(null, "There are(is) " + result + " " + selection + "(s) in the zoo");
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btn_countActionPerformed

    private void btn_battleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_battleActionPerformed
        // TODO add your handling code here:
        new Battlefield().setVisible(true);
    }//GEN-LAST:event_btn_battleActionPerformed

    private void btn_emplActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_emplActionPerformed
        // TODO add your handling code here:
        new Employees().setVisible(true);
    }//GEN-LAST:event_btn_emplActionPerformed

    private void txt_ageKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_ageKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_ageKeyTyped

    private void txt_ageKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_ageKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_ageKeyPressed

    private void txt_ageKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_ageKeyReleased
        // TODO add your handling code here:
        try {
            if (!txt_age.getText().isEmpty()) {
                Integer.parseInt(txt_age.getText());
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Not a number!");
            txt_age.setText("");
        }
    }//GEN-LAST:event_txt_ageKeyReleased

    private void loadData() {
        try {
            Class.forName(connector);
            Connection con = DriverManager.getConnection(url, user, password);
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(
                    "SELECT  id, name, age, species_name, cage_size\n"
                    + "FROM   animals a  \n"
                    + "       LEFT OUTER JOIN species s on a.id_species = s.id_species\n"
                    + "       INNER JOIN cages c on c.cage_nr = a.cage_nr\n"
                    + "ORDER BY 1;");
            {

                while (jTable1.getRowCount() > 0) {
                    ((DefaultTableModel) jTable1.getModel()).removeRow(0);
                }

                int col = rs.getMetaData().getColumnCount();

                while (rs.next()) {
                    Object[] rows = new Object[col];
                    for (int i = 1; i <= col; i++) {
                        rows[i - 1] = rs.getObject(i);
                    }
                    ((DefaultTableModel) jTable1.getModel()).insertRow(rs.getRow() - 1, rows);
                }
                rs.close();
                st.close();
                con.close();
            }

        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /*CREATE OR REPLACE FUNCTION species_name_to_id(a_species_name IN VARCHAR)
RETURNS NUMERIC AS $$
DECLARE s_id NUMERIC;
BEGIN
	IF a_species_name is not null THEN
		SELECT id_species INTO s_id FROM animals INNER JOIN species using(id_species)
                WHERE species_name = a_species_name;
	END IF;
	RETURN s_id;
END;
$$ LANGUAGE plpgsql;*/
    
 /*
CREATE OR REPLACE FUNCTION check_duplicate(animal_name IN VARCHAR)
RETURNS NUMERIC AS $$
DECLARE count_id NUMERIC;
BEGIN
		SELECT count(id) INTO count_id FROM animals WHERE name = animal_name;
	RETURN count_id;
END;
$$ LANGUAGE plpgsql;    
     */
    
    private void saveData() {
        String species_name = (String) species_box.getSelectedItem();
        int id_species = 100;
        String name = txt_name.getText();
        int age = Integer.parseInt(txt_age.getText());
        String cage = (String) cage_box.getSelectedItem();
        int cage_nr, check = 2;

        try {
            Class.forName(connector);
            Connection con = DriverManager.getConnection(url, user, password);
            PreparedStatement pstmt = con.prepareStatement("insert into animals values(nextval('id_seq'),?,?,?,?)");
            if (species_box.getSelectedIndex() != 0) {
                ResultSet rs = con.prepareStatement("SELECT check_duplicate('" + name + "')").executeQuery();
                while (rs.next()) {
                    check = rs.getInt("check_duplicate");
                }
                if (check == 0) {
                    rs = con.prepareStatement("SELECT species_name_to_id('" + species_name + "')").executeQuery();
                    while (rs.next()) {
                        id_species = rs.getInt("species_name_to_id");
                    }
                    rs = con.prepareStatement("select count(id) from animals inner join cages using(cage_nr) where cage_size = '" + cage + "'").executeQuery();
                    while (rs.next()) {
                        cage_nr = rs.getInt("count");
                        if (cage_nr > 0) {
                            rs = con.prepareStatement("select allocate_animal('" + cage + "')").executeQuery();
                            while (rs.next()) {
                                cage_nr = rs.getInt("allocate_animal");
                                pstmt.setString(1, name);
                                pstmt.setInt(2, id_species);
                                pstmt.setInt(3, age);
                                pstmt.setInt(4, cage_nr);
                                int i = pstmt.executeUpdate();
                                if (i > 0) {
                                    JOptionPane.showMessageDialog(null, "Animal added!");
                                    lblStatus.setForeground(new Color(0, 179, 0));
                                    lblStatus.setText("One animal more on this planet!");
                                    loadData();
                                    clearFields();
                                } else {
                                    JOptionPane.showMessageDialog(null, "Animal saving failed!");
                                }
                                pstmt.close();
                                con.close();
                            }

                        } else if (cage_nr == 0) {

                            switch (cage) {
                                case "S":
                                    cage_nr = 1;
                                    break;
                                case "M":
                                    cage_nr = 101;
                                    break;
                                case "L":
                                    cage_nr = 201;
                                    break;
                            }

                            pstmt.setString(1, name);
                            pstmt.setInt(2, id_species);
                            pstmt.setInt(3, age);
                            pstmt.setInt(4, cage_nr);
                            int i = pstmt.executeUpdate();

                            if (i > 0) {
                                JOptionPane.showMessageDialog(null, "Animal added!");
                                lblStatus.setForeground(new Color(0, 179, 0));
                                lblStatus.setText("One animal more on this planet!");
                                loadData();
                                clearFields();
                            } else {
                                JOptionPane.showMessageDialog(null, "Animal saving failed!");
                            }
                            pstmt.close();
                            con.close();
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "There is already an animal named " + name + ".\nName the animal differently.");
                }

            } else {
                JOptionPane.showMessageDialog(null, "You need to select a specific species.\n"
                        + "The 'all animals' option can be used only with the 'count animals' button.");
            }

        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void alterId() {
        try {
            Class.forName(connector);
            Connection con = DriverManager.getConnection(url, user, password);
            PreparedStatement pstmt;
            try (
                    Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
                    ResultSet rs = st.executeQuery("select * from animals")) {
                int id;
                if (rs.last()) {
                    id = rs.getInt("id");
                    id++;
                    pstmt = con.prepareStatement("alter sequence id_seq restart with " + id);
                    pstmt.executeUpdate();
                    pstmt.close();
                } else {
                    pstmt = con.prepareStatement("alter sequence id_seq restart with 1");
                    pstmt.executeUpdate();
                    pstmt.close();
                }
                rs.close();
                st.close();
                con.close();
            }

        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void remove() {
        try {
            Class.forName(connector);
            Connection con = DriverManager.getConnection(url, user, password);
            int row = jTable1.getSelectedRow();
            if (jTable1.isRowSelected(row)) {
                String value = (jTable1.getModel().getValueAt(row, 0).toString());
                String query = "delete from animals where id = " + value;
                PreparedStatement pst = con.prepareStatement(query);
                pst.executeUpdate();
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.setRowCount(0);
                loadData();
                JOptionPane.showMessageDialog(null, "The animal removed!");
                clearFields();
            } else {
                JOptionPane.showMessageDialog(null, "To remove an animal you must first click on the selected row in the table.");
            }

        } catch (HeadlessException | ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void update() {
        String species_name = (String) species_box.getSelectedItem();
        int id_species = 100;
        String name = txt_name.getText();
        String cage = (String) cage_box.getSelectedItem();
        int cage_nr, check = 2;
        try {
            Class.forName(connector);
            Connection con = DriverManager.getConnection(url, user, password);
            int row = jTable1.getSelectedRow();
            if (jTable1.isRowSelected(row)) {
                int age = Integer.parseInt(txt_age.getText());
                String value = (jTable1.getModel().getValueAt(row, 0).toString());
                PreparedStatement pstmt = con.prepareStatement("update animals set name = ?, id_species = ?, age = ?, cage_nr = ? where id = " + value);
                if (species_box.getSelectedIndex() != 0) {
                    ResultSet rs = con.prepareStatement("SELECT check_duplicate('" + name + "')").executeQuery();
                    while (rs.next()) {
                        check = rs.getInt("check_duplicate");
                    }
                    if (check == 0) {
                        rs = con.prepareStatement("SELECT species_name_to_id('" + species_name + "')").executeQuery();
                        while (rs.next()) {
                            id_species = rs.getInt("species_name_to_id");
                        }
                        rs = con.prepareStatement("select count(id) from animals inner join cages using(cage_nr) where cage_size = '" + cage + "'").executeQuery();
                        while (rs.next()) {
                            cage_nr = rs.getInt("count");
                            if (cage_nr > 0) {
                                rs = con.prepareStatement("select allocate_animal('" + cage + "')").executeQuery();
                                while (rs.next()) {
                                    cage_nr = rs.getInt("allocate_animal");
                                    pstmt.setString(1, name);
                                    pstmt.setInt(2, id_species);
                                    pstmt.setInt(3, age);
                                    pstmt.setInt(4, cage_nr);
                                    int i = pstmt.executeUpdate();
                                    if (i > 0) {
                                        JOptionPane.showMessageDialog(null, "Animal's data updated!");
                                        lblStatus.setForeground(new Color(0, 179, 0));
                                        lblStatus.setText("Data of the animal changed!");
                                        loadData();
                                        clearFields();
                                    } else {
                                        JOptionPane.showMessageDialog(null, "Animal's data saving failed!");
                                    }
                                    pstmt.close();
                                    con.close();
                                }

                            } else if (cage_nr == 0) {

                                switch (cage) {
                                    case "S":
                                        cage_nr = 1;
                                        break;
                                    case "M":
                                        cage_nr = 101;
                                        break;
                                    case "L":
                                        cage_nr = 201;
                                        break;
                                }

                                pstmt.setString(1, name);
                                pstmt.setInt(2, id_species);
                                pstmt.setInt(3, age);
                                pstmt.setInt(4, cage_nr);
                                int i = pstmt.executeUpdate();

                                if (i > 0) {
                                    JOptionPane.showMessageDialog(null, "Animal's data updated!");
                                    lblStatus.setForeground(new Color(0, 179, 0));
                                    lblStatus.setText("One animal more on this planet!");
                                    loadData();
                                    clearFields();
                                } else {
                                    JOptionPane.showMessageDialog(null, "Animal's data saving failed!");
                                }
                                pstmt.close();
                                con.close();
                            }
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "There is already an animal named " + name + ".\nName the animal differently.");
                    }

                } else {
                    JOptionPane.showMessageDialog(null, "You need to select a specific species.\n"
                            + "The 'all animals' option can be used only with the 'count animals' button.");
                }
            } else {
                JOptionPane.showMessageDialog(null, "To edit an animal's data you must first click on the selected row in the table.");
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void clearFields() {
        txt_name.setText("");
        txt_age.setText("");
    }

    private void setColor(JPanel panel) {
        panel.setBackground(new Color(135, 112, 225));
    }

    private void resetColor(JPanel panel) {
        panel.setBackground(new Color(76, 41, 211));
    }

    private void centerFrame() {
        Toolkit toolkit;
        toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width / 2 - getWidth() / 2, size.height / 2 - getHeight() / 2);
    }

    private void check_age() {
        try {
            Class.forName(connector);
            Connection con = DriverManager.getConnection(url, user, password);
            Statement st = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            int row = jTable1.getSelectedRow();
            if (jTable1.isRowSelected(row)) {
                String value = (jTable1.getModel().getValueAt(row, 0).toString());
                ResultSet rs = st.executeQuery("select id, name, age, avg_length_life from animals a, species s\n"
                        + "where a.id_species = s.id_species and id = " + value);
                int age, avg_age, dif, reply;
                if (rs.last()) {
                    age = rs.getInt("age");
                    avg_age = rs.getInt("avg_length_life");
                    dif = avg_age - age;
                    String too_old = "The animal is already quite old. It lives already " + (-dif) + " years longer than the average. "
                            + "Do you want to remove it?";
                    String q = "This animal in zoo is old";

                    if (dif > 0) {
                        JOptionPane.showMessageDialog(null, "The animal should live about " + dif + " years more yet");
                    } else if (dif == 0) {
                        JOptionPane.showMessageDialog(null, "The animal lives exactly as long as the average age for its species is, that is " + avg_age + " years");
                    } else {
                        reply = JOptionPane.showConfirmDialog(null, too_old, q, YES_NO_OPTION, QUESTION_MESSAGE);
                        if (reply == JOptionPane.YES_OPTION) {
                            remove();
                            alterId();
                        }
                    }
                }
            }

        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (UnsupportedLookAndFeelException | ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_battle;
    private javax.swing.JButton btn_count;
    private javax.swing.JPanel btn_discover;
    private javax.swing.JButton btn_empl;
    private javax.swing.JPanel btn_list;
    private javax.swing.JButton btn_rmv;
    private javax.swing.JButton btn_rst;
    private javax.swing.JButton btn_rst2;
    private javax.swing.JButton btn_update;
    private javax.swing.JComboBox<String> cage_box;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel_edit;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lbl_cage;
    private javax.swing.JLabel lbl_discover;
    private javax.swing.JLabel lbl_find;
    private javax.swing.JLabel lbl_list;
    private javax.swing.JLabel lbl_name;
    private javax.swing.JLabel lbl_species;
    private javax.swing.JLabel lbll_age;
    private javax.swing.JComboBox<String> search_box;
    private javax.swing.JComboBox<String> species_box;
    private javax.swing.JTextField txt_age;
    private javax.swing.JTextField txt_find;
    private javax.swing.JTextField txt_name;
    private javax.swing.JButton up;
    // End of variables declaration//GEN-END:variables
}
